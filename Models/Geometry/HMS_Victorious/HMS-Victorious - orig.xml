<?xml version="1.0"?>


<!--
    Copyright License: Creative Commons, CC-BY-NC-SA. FSX AI 3D Freeware Model, Used with kind permission by the Gentlemen of Flying Stations Forum.com. modellers and artists for all things Fleet Air Arm for MicroSoft's FS2004 and FSX
    User Pilotable and AI controlled with FlightGear 2.60
    
    
-->


<PropertyList>

      <description>HMS-Victorious - R38</description>
	<author>LesterBoffo modified from Flying Stations Websites free download AI HMS Victorious carrier</author>
	<status>early-production</status>
      <path>hms_victorious_r38.ac</path>
 

	<nasal>
		<load>
			print("LOAD HMS-Victorious ", cmdarg().getPath());

			var fg_root = getprop("/sim/fg-root");
			var self = cmdarg();
			var control_node = self.getNode("controls/turn-to-base-course", 1);
			var pos_node = self.getNode("sim/antenna-pos-norm", 1);
			pos_node.setDoubleValue(0);
			var turn_old = 1;

			########
			# properties used to calculate rel wind for the bow-wave shader

			var speed_Node = self.getNode("velocities/speed-kts", 1);
			var hdg_Node = self.getNode("orientation/true-heading-deg", 1);
			var wind_speed_Node = self.getNode("environment/rel-wind-speed-kts", 1);
			wind_speed_Node.setDoubleValue(0);

			########
			# properties to control the E2C

			var gear0_Node = self.getNode("gear/gear[0]/position-norm", 1);
			gear0_Node.setDoubleValue(1);

			var gear1_Node = self.getNode("gear/gear[1]/position-norm", 1);
			gear1_Node.setDoubleValue(1);

			var gear2_Node = self.getNode("gear/gear[2]/position-norm", 1);
			gear2_Node.setDoubleValue(1);

			var compression0_Node = self.getNode("gear/gear[0]/compression-norm", 1);
			compression0_Node.setDoubleValue(0);

			var compression1_Node = self.getNode("gear/gear[1]/compression-norm", 1);
			compression1_Node.setDoubleValue(0.9);

			var compression2_Node = self.getNode("gear/gear[2]/compression-norm", 1);
			compression2_Node.setDoubleValue(0.9);

			var wingfold_Node = self.getNode("surface-positions/wing-fold-pos-norm", 1);
			wingfold_Node.setDoubleValue(1.0);

			var rpm0_Node = self.getNode("engines/engine[0]/rpm", 1);
			rpm0_Node.setDoubleValue(0.15);

			var rpm1_Node = self.getNode("engines/engine[1]/rpm", 1);
			rpm1_Node.setDoubleValue(0.17);

			########
			# the main loop

			var update = func {
			var turn = control_node.getValue();
			var value = wind_speed_Node.getValue();
			setprop("/environment/HMS_Victorious/rel-wind-speed-kts", value);
			value = speed_Node.getValue();
			setprop("/environment/HMS_Victorious/spd-kt", value);
			value = hdg_Node.getValue();
			setprop("/environment/HMS_Victorious/hdg-deg", value);

			if (turn_old != turn){
			turn_old = turn;
			move_whips();
			}

			settimer(update,0);
			}

			var move_whips = func {
			var whip_pos = pos_node.getValue();
			if (whip_pos &lt;=1 and whip_pos &gt;=0 and turn_old == 0){
			whip_pos += 0.001;

			if (whip_pos &gt; 1)
			whip_pos = 1;

			pos_node.setValue(whip_pos);
			settimer(move_whips,0);
			} elsif (whip_pos &lt;=1 and whip_pos &gt;=0 and turn_old == 1) {
			whip_pos -= 0.001;

			if (whip_pos &lt; 0)
			whip_pos = 0;

			pos_node.setValue(whip_pos);
			settimer(move_whips,0);
			} else {
			return;
			}

			}

			########
			#start the main loop
			update();

		</load>
	</nasal>

      <model>
		 <name>Wakes</name>
		 <path>Models/Geometry/HMS_Victorious/sillage2.xml</path>
		 <offsets>
			 <x-m>8</x-m>
			 <y-m>0</y-m>
			 <z-m>0</z-m>
			 <heading-deg>0</heading-deg>
		 </offsets>
	</model>

   <model>
       <name>Bow-Wave</name>
       <path>data/Models/Geometry/HMS_Victorious/Wakes/bow_wave.xml</path>
       <!--<path>Models/Geometry/Nimitz/bow_wave.xml</path>-->
         <offsets>
          <x-m>-60.0</x-m>
          <z-m>0.4</z-m>
       </offsets>
    </model>
     
     <model>
      <name>bowwake-stbd</name>
      <path>data/Models/Geometry/HMS_Victorious/Wakes/wake.xml</path>
      <offsets>
         <x-m>-120.0</x-m>
         <y-m>0</y-m>
         <z-m>1</z-m>
         <heading-deg>0</heading-deg>
      </offsets>
      <overlay>
         <particlesystem>
            <placer>
               <type>segments</type>
               <vertex>
                  <x-m>0</x-m>
                  <y-m>0</y-m>
                  <z-m>0</z-m>
               </vertex>
               <vertex>
                  <x-m>0</x-m>
                  <y-m>1.0</y-m>
                  <z-m>0</z-m>
               </vertex>
               <vertex>
                  <x-m>6.5</x-m>
                  <y-m>7.5</y-m>
                  <z-m>0</z-m>
               </vertex>
               <vertex>
                  <x-m>13</x-m>
                  <y-m>15.0</y-m>
                  <z-m>0</z-m>
               </vertex>
            </placer>
            <shooter>
               <theta-min-deg>-80</theta-min-deg>
               <theta-max-deg>-100</theta-max-deg>
               <phi-min-deg>85</phi-min-deg>
               <phi-max-deg>90</phi-max-deg>
               <rotation-speed>
                  <z-max-deg-sec>15</z-max-deg-sec>
                  <z-min-deg-sec>-15</z-min-deg-sec>
               </rotation-speed>
            </shooter>
         </particlesystem>
      </overlay>
   </model>
   
   <model>
      <name>bowwake-port</name>
      <path>data/Models/Geometry/HMS_Victorious/Wakes/wake2.xml</path>
      <offsets>
         <x-m>-120.0</x-m>
         <y-m>0</y-m>
         <z-m>1</z-m>
         <heading-deg>0</heading-deg>
      </offsets>
      <overlay>
         <particlesystem>
            <placer>
               <type>segments</type>
               <vertex>
                  <x-m>0</x-m>
                  <y-m>0</y-m>
                  <z-m>0</z-m>
               </vertex>
               <vertex>
                  <x-m>0</x-m>
                  <y-m>-1.0</y-m>
                  <z-m>0</z-m>
               </vertex>
               <vertex>
                  <x-m>6.5</x-m>
                  <y-m>-7.5</y-m>
                  <z-m>0</z-m>
               </vertex>
               <vertex>
                  <x-m>13</x-m>
                  <y-m>-15.0</y-m>
                  <z-m>0</z-m>
               </vertex>
            </placer>
            <shooter>
               <theta-min-deg>-80</theta-min-deg>
               <theta-max-deg>-100</theta-max-deg>
               <phi-min-deg>85</phi-min-deg>
               <phi-max-deg>90</phi-max-deg>
               <rotation-speed>
                  <z-max-deg-sec>15</z-max-deg-sec>
                  <z-min-deg-sec>-15</z-min-deg-sec>
               </rotation-speed>
            </shooter>
         </particlesystem>
      </overlay>
     </model>

     <model>
       <name>ensign</name>
	 <path>Models/Geometry/HMS_Victorious/rnas-standard.xml</path>
	  <offsets>
			 <x-m>-23.749</x-m>
			 <y-m>11.794</y-m>
			 <z-m>42.843</z-m>
	  </offsets>
	 </model>

   <model>
       <name>ensign</name>
	 <path>Models/Geometry/HMS_Victorious/ops-standard.xml</path>
	  <offsets>
			 <x-m>-23.749</x-m>
			 <y-m>11.793</y-m>
			 <z-m>40.162</z-m>
	  </offsets>
	 </model>

   	<animation>
		<object-name>Bow-Wave</object-name>
		<type>scale</type>
		<property>/environment/HMS_Victorious/spd-kt</property>
		<x-factor>0.04</x-factor>
		<y-factor>0.0</y-factor>
		<z-factor>0.0</z-factor>
		<x-offset>0.0</x-offset>
		<y-offset>1.0</y-offset>
		<z-offset>1.0</z-offset>
		<x-min>0.0</x-min>
		<x-max>1.2</x-max>
		<center>
			<x-m>-120.50</x-m>
			<y-m>2.0</y-m>
			<z-m>0</z-m>
		</center>
	</animation>

      <animation>
		<type>rotate</type>
		<object-name>Bow-Wave</object-name>
		<object-name>bowwake-stbd</object-name>
		<object-name>bowwake-port</object-name>
		<property>orientation/roll-deg</property>
		<factor>1</factor>
	<center>
			<x-m>20.813</x-m>
			<y-m>0.00</y-m>
			<z-m>1.0473</z-m>
		</center>
		<axis>
			<x>1</x>
			<y>0</y>
			<z>0</z>
		</axis>
	</animation>

         <animation>
            <condition>
                <and>
                    <equals>
                        <property>/sim/model/carrier-jsbsim</property>
                        <value>1</value>
                    </equals>
                    <equals>
                        <property>/sim/carrier/name</property>
                        <value>HMS-Victorious</value>
                    </equals>
                </and>
            </condition>
            <type>rotate</type>
            <object-name>runaway-net1</object-name>
            <property>/surface-positions/jbd1-pos-norm</property>
            <factor>90</factor>
            <axis>
                <x1-m>-4.18</x1-m>
                <y1-m>-10.855</y1-m>
                <z1-m>14.527</z1-m>
                <x2-m>-4.18</x2-m>
                <y2-m>9.696</y2-m>
                <z2-m>14.527</z2-m>
            </axis>
        </animation>

    <animation>
            <condition>
                <not-equals>
                    <property>/sim/model/carrier-jsbsim</property>
                    <value>1</value>
                </not-equals>
            </condition>
	    <type>rotate</type>
	    <object-name>runaway-net1</object-name>
	    <property>surface-positions/jbd-pos-norm</property>
	    <factor>90</factor>
	    <axis>
	          <x1-m>-4.18</x1-m>
                <y1-m>-10.855</y1-m>
                <z1-m>14.527</z1-m>
                <x2-m>-4.18</x2-m>
                <y2-m>9.696</y2-m>
                <z2-m>14.527</z2-m>
	    </axis>
    </animation>

    <!-- animation>
        <condition>
            <and>
                <equals>
                    <property>/sim/model/carrier-jsbsim</property>
                    <value>1</value>
                </equals>
                <equals>
                    <property>/sim/carrier/name</property>
                    <value>HMS-Victorious</value>
                </equals>
            </and>
        </condition>
        <type>rotate</type>
        <object-name>runaway-net2</object-name>
        <property>/surface-positions/jbd2-pos-norm</property>
        <factor>90</factor>
        <axis>
            <x1-m>37.4696</x1-m>
            <y1-m>-15.5491</y1-m>
            <z1-m>14.2803</z1-m>
            <x2-m>39.8606</x2-m>
            <y2-m>-19.0947</y2-m>
            <z2-m>14.2803</z2-m>
        </axis>
    </animation -->

    <animation>
            <condition>
                <not-equals>
                    <property>/sim/model/carrier-jsbsim</property>
                    <value>1</value>
                </not-equals>
            </condition>
	    <type>rotate</type>
	    <object-name>runaway-net2</object-name>
	    <property>surface-positions/jbd-pos-norm</property>
	    <factor>90</factor>
	    <axis>
		    <x1-m>37.4696</x1-m>
		    <y1-m>-15.5491</y1-m>
		    <z1-m>14.2803</z1-m>
		    <x2-m>39.8606</x2-m>
		    <y2-m>-19.0947</y2-m>
		    <z2-m>14.2803</z2-m>
	    </axis>
    </animation>

    <!-- animation>
	    <type>translate</type>
	    <object-name>bow-elevator</object-name>
	    <property>surface-positions/elevators-pos-norm</property>
	    <factor>8.20</factor>
	    <axis>
		    <x>0</x>
		    <y>0</y>
		    <z>-1</z>
	    </axis>
	</animation -->

	<!-- animation>
		<type>translate</type>
		<object-name>aft-elevator</object-name>
		<property>surface-positions/elevators-pos-norm</property>
		<factor>8.20</factor>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation -->

      <animation>
		<type>rotate</type>
		<object-name>port-booms</object-name>
            <object-name>port-boomwires</object-name>
		<property>sim/antenna-pos-norm</property>
            <offset-deg>-90</offset-deg>
		<factor>90</factor>
		<axis>
			<x1-m>-63.76</x1-m>
			<y1-m>-15.688</y1-m>
			<z1-m>13.397</z1-m>
			<x2-m>75.926</x2-m>
			<y2-m>-15.688</y2-m>
			<z2-m>13.397</z2-m>
		</axis>
	</animation>

     <animation>
		<type>rotate</type>
            <object-name>port-boomwires</object-name>
		<property>sim/antenna-pos-norm</property>
            <offset-deg>90</offset-deg>
		<factor>-90</factor>
		<axis>
			<x1-m>-63.76</x1-m>
			<y1-m>-31.924</y1-m>
			<z1-m>12.77</z1-m>
			<x2-m>75.926</x2-m>
			<y2-m>-31.924</y2-m>
			<z2-m>12.77</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>starbrd-booms</object-name>
            <object-name>starbrd-boomwires</object-name>
		<property>sim/antenna-pos-norm</property>
            <offset-deg>90</offset-deg>
		<factor>-90</factor>
		<axis>
			<x1-m>-63.76</x1-m>
			<y1-m>16.18</y1-m>
			<z1-m>13.397</z1-m>
			<x2-m>75.926</x2-m>
			<y2-m>16.18</y2-m>
			<z2-m>13.397</z2-m>
		</axis>
	</animation>

    <animation>
		<type>rotate</type>
            <object-name>starbrd-boomwires</object-name>
		<property>sim/antenna-pos-norm</property>
            <offset-deg>-90</offset-deg>
		<factor>90</factor>
		<axis>
			<x1-m>-63.76</x1-m>
			<y1-m>31.68</y1-m>
			<z1-m>12.67</z1-m>
			<x2-m>75.926</x2-m>
			<y2-m>31.68</y2-m>
			<z2-m>12.67</z2-m>
		</axis>
	</animation>
	
	<animation>
		<type>interaction</type>
		<object-name>cat-1</object-name>
		<interaction-type>carrier-catapult</interaction-type>
	</animation>
	<animation>
		<type>interaction</type>
		<object-name>wire-1</object-name>
		<object-name>wire-2</object-name>
		<object-name>wire-3</object-name>
		<object-name>wire-4</object-name>
		<interaction-type>carrier-wire</interaction-type>
	</animation>

  	<animation>
		<type>range</type>
		<max-m>90000</max-m>
	</animation>

</PropertyList>
